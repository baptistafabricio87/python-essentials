{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "01757a16",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1 = {1, 2, 3}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3304923d",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "dc7069fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "type(cj1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "dcdde924",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1 = set((1, 2, 3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "37c7d1b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "type(cj1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ed4ad6f6",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1 = set([1, 2, 3])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "912b99e0",
   "metadata": {},
   "outputs": [],
   "source": [
    "type(cj1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "781cbd66",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1 = set('banana')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "fd32bd6d",
   "metadata": {},
   "outputs": [],
   "source": [
    "type(cj1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f1d53002",
   "metadata": {},
   "outputs": [],
   "source": [
    "set?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "1e98b51b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# set() novo conjunto vazio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "76703195",
   "metadata": {},
   "outputs": [],
   "source": [
    "# set('banana') novo conjunto com conteudo passado na definição."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3c051d6a",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "93d9c623",
   "metadata": {},
   "outputs": [],
   "source": [
    "# conjunto não garante ordem, e mantém somente valores unicos, ou seja, não permite repetição de itens."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "45b0ff1b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# exemplos de operações de conjunto"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "061db772",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_a = [1, 2, 3, 4, 5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "cf3dfd2d",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_b = [4, 5, 6, 7, 8]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d2ba24e3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# União"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "3a877686",
   "metadata": {},
   "outputs": [],
   "source": [
    "set(conjunto_a) | set(conjunto_b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "31d26e7c",
   "metadata": {},
   "outputs": [],
   "source": [
    "set(conjunto_a).union(set(conjunto_b))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "24f2f60e",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_a = set([1, 2, 3, 4, 5])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "55670e76",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_b = set([4, 5, 6, 7, 8])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "b7185997",
   "metadata": {},
   "outputs": [],
   "source": [
    "# É recomendado definir o set antes de sua utilização. como feito acima."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "ef916bcb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Intersecção"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "c58c48fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_a & conjunto_b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "c651b197",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_a.intersection(conjunto_b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "9856c8c1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Diferença - Neste caso é importante verificar a ordem da operação. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "32f8c51d",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_a - conjunto_b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "70b67bd4",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_a.difference(conjunto_b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "a5af8842",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_b - conjunto_a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "1fbc87be",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_b.difference(conjunto_a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "a9a0a4b7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Diferença Simetrica - Retorna todos os elementos diferentes entre si."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "c18990c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_a ^ conjunto_b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "a3f41e31",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_b ^ conjunto_a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "7a301c52",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_a.symmetric_difference(conjunto_b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "9132897a",
   "metadata": {},
   "outputs": [],
   "source": [
    "conjunto_b.symmetric_difference(conjunto_a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "b69ba90f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set não servem para armazenar informações, utilizados como objetos de transição, como retirar duplicidades, ou realizar as operações anteriores, união, intersecção, diferença e diferença simetrica."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "b00ed0a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Alguns protocolos do objeto Set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "4be57915",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1 = set()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "9b1cad0d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# adicionando elementos."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "c15ff4e8",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1.add(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "23e7bb93",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1.add(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "3ee06989",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1.add(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "46b75c18",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "eea520d7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set não permite repetição de elementos, então ao tentar adicionar um elemento já existente o set não é alterado. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "07ca7840",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1.add(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "65c608df",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1.add(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "9cf5ad34",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "44974dad",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set implementa HASH TABLE, com isso a operação de buscar tem maior performance. Tendo sua operação como 'O de 1' CONSTANTE. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "7cce51a7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Quando não utilizar Set? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "58062678",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Quando é permitido duplicidade de elementos. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "e075ff42",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Quando é necessário manter a ordem do objeto. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "b1cb165b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set não permite acesso aos elementos por indice, pois ele não garante a ordem dos elementos."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "1795684a",
   "metadata": {},
   "outputs": [],
   "source": [
    "cj1[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "4a096fa8",
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\" ------------------------------------------------------\n",
    "TypeError            Traceback (most recent call last)\n",
    "Cell In[54], line 1\n",
    "----> 1 cj1[0]\n",
    "\n",
    "TypeError: 'set' object is not subscriptable\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "33c574e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set não é um objeto subscriptable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "2f0cb40d",
   "metadata": {},
   "outputs": [],
   "source": [
    "save day2_sets.py"
   ]
  }
 ],
 "metadata": {},
 "nbformat": 4,
 "nbformat_minor": 5
}
